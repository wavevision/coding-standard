<?xml version="1.0" encoding="utf-8"?>
<project name="Wavevision Point" default="init">


    <property name="src" value="php/WavevisionCodingStandard"/>
    <property name="tests" value="php/tests"/>
    <property name="phpBin" value="php"/>
    <property name="codeSnifferExclude" value="*/data/*"/>
    <property name="codeSnifferRuleset" value="codesniffer-ruleset.xml"/>
    <property name="bin" value="vendor/bin"/>

    <target name="check" description="Run lints and tests. Run before every pull request"
            depends="rm-cache, lint, cs, phpstan, test"/>
    <target name="cs" description="Check code style and fix it if possible" depends="phpcbf, phpcs"/>
    <target name="init" description="Initialize project" depends="composer"/>

    <target name="rm-cache" description="Clear cache">
        <exec executable="rm -rf temp/cache"/>
    </target>

    <target name="composer" description="Download php dependencies">
        <exec
                executable="composer"
                logoutput="true"
                passthru="true"
                checkreturn="true"
        >
            <arg value="install"/>
        </exec>
    </target>

    <target name="lint" description="Check php syntax">
        <exec
                executable="${bin}/parallel-lint"
                logoutput="true"
                passthru="true"
                checkreturn="true"
        >
            <arg value="-e"/>
            <arg value="${phpBin}"/>
            <arg value="${src}"/>
            <arg value="${tests}"/>
        </exec>
    </target>

    <target name="phpcbf" description="Fix fixable code style issues">
        <exec
                executable="${bin}/phpcbf"
                logoutput="true"
                passthru="true"
                checkreturn="false"
        >
            <arg value="-spn"/>
            <arg value="--standard=${codeSnifferRuleset}"/>
            <arg value="--extensions=${phpBin}"/>
            <arg value="--ignore=${codeSnifferExclude}"/>
            <arg value="${src}"/>
            <arg value="${tests}"/>
        </exec>
    </target>

    <target name="phpcs" description="Check code style and don't fix it">
        <exec
                executable="${bin}/phpcs"
                logoutput="true"
                passthru="true"
                checkreturn="true"
        >
            <arg value="-sp"/>
            <arg value="--standard=${codeSnifferRuleset}"/>
            <arg value="--extensions=${phpBin}"/>
            <arg value="--ignore=${codeSnifferExclude}"/>
            <arg value="${src}"/>
            <arg value="${tests}"/>
        </exec>
    </target>

    <target name="phpstan" description="Run static analysis">
        <exec
                executable="${bin}/phpstan"
                logoutput="true"
                passthru="true"
                checkreturn="true"
        >
            <arg value="analyze"/>
            <arg value="${src}"/>
            <arg value="--level"/>
            <arg value="max"/>
        </exec>
    </target>

    <target name="test" description="Run tests">
        <exec
                executable="${bin}/phpunit"
                logoutput="true"
                passthru="true"
                checkreturn="true"
        >
        </exec>
    </target>

    <target name="test-no-coverage" description="Run tests without coverage">
        <exec
                executable="${bin}/phpunit"
                logoutput="true"
                passthru="true"
                checkreturn="true"
        >
            <arg value="--no-coverage"/>
        </exec>
    </target>


</project>